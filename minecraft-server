#!/bin/bash

server_home="/var/minecraft"

if [ "$1" == "run" ]
then
	if [[ "$EUID" -ne "$(id -u minecraft)" ]]
	then
		echo "minecraft-server may only be run by the \"minecraft\" user"
		echo "try:"
		echo "	sudo -u minecraft minecraft-server <args>..."
		exit 1
	fi

	killing=false

	function onkill
	{
		killing=true
		if [ -n "$jpid" ]
		then
			echo "terminating java process $jpid"
			kill -15 "$jpid"
			if kill -0 "$jpid"
			then
				echo "jpid not successfully terminated. waiting 3 seconds"
				sleep 3s
				kill -9 "$jpid"
			fi
		fi
	}

	trap "onkill" SIGINT SIGTERM SIGQUIT

	server_name="$2"
	if [ -z "$server_name" ]
	then
		# run_id=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 8 | head -n 1)
		echo "No server name given. Exiting..."
		exit 1
	fi

	if [ ! -d "$server_home/servers/$server_name" ]
	then
		echo "server \"$server_name\" does not exist. A new server will be created with this name"
		mkdir -p "$server_home/servers/$server_name"
	fi
	chown -R minecraft:minecraft "$server_home/servers/$server_name"
	if [ ! -f "$server_home/servers/$server_name/minecraft-server.jar" ]
	then
		cp "$server_home/latest.jar" "$server_home/servers/$server_name/minecraft-server.jar"
	fi

	cd "$server_home/servers/$server_name"
	echo "$$" > "/tmp/.minecraft-server.$server_name"

	while true
	do
		java -Xmx2048M -Xms1024M -jar minecraft-server.jar nogui &
		jpid=$!
		echo "$jpid" > "/tmp/.minecraft-server-java.$server_name"
		wait $jpid
		if $killing
		then
			echo "stopping server"
			exit
		else
			# Update the EULA
			eula_path="$server_home/servers/$server_name/eula.txt"
			sed -i '/eula=false/c\eula=true' "$eula_path"
		fi
		echo "java exited unexpectedly. restarting in 3 seconds"
		sleep 3s
		echo "restarting java"
	done
elif [ "$1" == "update" ]
then
	if [[ "$EUID" -ne 0 ]] && [[ "$EUID" -ne "$(id -u minecraft)" ]]
	then
		echo "You must be \"root\" or \"minecraft\" to update the server"
		exit 1
	fi

	server_name="$2"

	# Get latest version number
	version_manifest=$(wget -q -O - "https://launchermeta.mojang.com/mc/game/version_manifest.json")
	version=$(echo "$version_manifest" | jq -r ".latest.release")
	
	if [ -z "$version" ]
	then
		echo "Could not find the latest version. You may not be connected to the internet"
		exit 1
	fi
	echo "latest original minecraft version is $version"

	if [ ! -d "/tmp/minecraft" ]
	then 
		echo "/tmp/minecraft does not exist. Creating reposoritory ..."
		mkdir -p "/tmp/minecraft/"
	fi

	if [ "$3" == "bukkit" ] || [ "$2" == "bukkit" ]
	then
		# Download latest bukkit version jar*
		url="https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar"	
	else 
		# Download latest minecraft version jar
		manifest_url=$(curl -s "https://launchermeta.mojang.com/mc/game/version_manifest.json" | python3 -c $'import json,sys\nobj=json.load(sys.stdin)\nprint([ v for v in obj["versions"] if v["type"] == "release" ][0]["url"])')
	    echo "fetch latest download url from $manifest_url"
		url=$(curl -s $manifest_url | python3 -c $'import json,sys,base64\nobj=json.load(sys.stdin)\nprint(obj["downloads"]["server"]["url"])')
	fi
	echo "downloading latest jar from $url"
	wget "$url" -O "/tmp/minecraft/minecraft-server.jar" || rm -rf "/tmp/minecraft/minecraft-server.jar"
	
	if [ ! -f "/tmp/minecraft/minecraft-server.jar" ]
	then
		echo "Unable to download new server jar"
		exit 1
	fi

	echo "installing server jar..."
	
	if [ "$3" == "bukkit" ] || [ "$2" == "bukkit" ]
	then
		cd "/tmp/minecraft/"

		git config --global --unset core.autocrlf
		java -jar "minecraft-server.jar" --rev latest

		file_name=$(python3 -c $'import os, re\nprint(os.getcwd() + "/" + [ f  for f in os.listdir(os.getcwd()) if(re.search( ".*spigot-([0-9]|.){5,10}.jar", f)) ][0])')
 		version=$(python3 -c $'import re, os\nprint(re.search("([0-9]|.){6}.jar", [ f  for f in os.listdir(os.getcwd()) if(re.search( ".*spigot-([0-9]|.){5,10}.jar", f)) ][0]).group(0)[:-4])')
 		latest_version="Bukkit $version"	
		
		if [ ! -f "$file_name" ]
		then
			echo "File name is wrong "
			exit 1
		fi
		
		# install latest.jar and latest.version to server home
		mv "$file_name" "$server_home/latest.jar"

	else
		latest_version="Original $version"
		
		# install latest.jar and latest.version to server home
		mv "/tmp/minecraft/minecraft-server.jar" "$server_home/latest.jar"
	fi 	

	#rm -r "/tmp/minecraft/"

	echo "$latest_version" > "$server_home/latest.version"
	chown minecraft:minecraft "$server_home/latest.jar"
	chown minecraft:minecraft "$server_home/latest.version"

	if [ -n "$server_name" ] && [ "$server_name" != "bukkit" ]
	then
		echo "updating server jar for \"$server_name\""

		if [ ! -d "$server_home/servers/$server_name" ]
		then
			mkdir -p "$server_home/servers/$server_name"
			echo "eula=true" > "$server_home/servers/$server_name/eula.txt"
		fi 	
		
		cp "$server_home/latest.jar" "$server_home/servers/$server_name/minecraft-server.jar"
		chown minecraft:minecraft "$server_home/servers/$server_name/minecraft-server.jar"
	fi
elif [ -n "$1" ]
then
	echo "Please use one of these following commands :"
	echo "	- minecraft-server run (server_name)"
	echo "	- minecraft-server update (server_name) (bukkit)"
	exit 1
else
	echo "Command is required"
fi

